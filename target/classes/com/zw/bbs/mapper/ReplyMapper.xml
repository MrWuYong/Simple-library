<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zw.bbs.dao.ReplyMapper">
  <resultMap id="BaseResultMap" type="com.zw.bbs.model.Reply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="posts_id" jdbcType="INTEGER" property="postsId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="floor" jdbcType="INTEGER" property="floor" />
    <result column="reply_content" jdbcType="VARCHAR" property="replyContent" />
    <association property="user" javaType="User" >
      <id property="id" column="u_id"/>
      <result property="userCode" column="user_code"/>
      <result property="userName" column="user_name"/>
      <result property="userRole" column="user_role"/>
      <result property="sex" column="sex"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, posts_id AS postsId, user_id as userId, floor, reply_content AS replyContent,createDate
  </sql>
  <select id="selectAllByPostId" parameterType="Integer" resultMap="BaseResultMap">
    SELECT
          r.id as r_id,
          posts_id,
          user_id,
          floor,
          reply_content,
          createDate,
          u.id as u_id,
          user_code,
          user_name,
          user_role,
          sex
          FROM
          reply AS r
          INNER JOIN `user` AS u ON r.user_id = u.id
          WHERE
          r.posts_id = #{id}
          ORDER BY r_id ASC
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectFloor" resultType="Integer">
    SELECT
      Max(reply.floor)
    FROM
      reply
    WHERE posts_id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByPostsId" parameterType="Integer">
    delete from reply
    where posts_id = #{postsId}
  </delete>
  <insert id="insert" parameterType="com.zw.bbs.model.Reply">
    insert into reply (id, posts_id, user_id, 
      floor, reply_content)
    values (#{id,jdbcType=INTEGER}, #{postsId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{floor,jdbcType=INTEGER}, #{replyContent,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zw.bbs.model.Reply">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="postsId != null">
        posts_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="floor != null">
        floor,
      </if>
      <if test="replyContent != null">
        reply_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="postsId != null">
        #{postsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="floor != null">
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="replyContent != null">
        #{replyContent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zw.bbs.model.Reply">
    update reply
    <set>
      <if test="postsId != null">
        posts_id = #{postsId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="floor != null">
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="replyContent != null">
        reply_content = #{replyContent,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zw.bbs.model.Reply">
    update reply
    set posts_id = #{postsId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      floor = #{floor,jdbcType=INTEGER},
      reply_content = #{replyContent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>